---
// Global Styles
import '@Styles/articles_page.css';
// Query
import pageQuery, { repeatableQuery } from '@Queries/page_articles';
// Layouts
import Layout from '@Layouts/Layout.astro';
import Article from '@Components/pages-with-articles/Article.astro';
import PageEmpty from '@Components/page-empty/PageEmpty.astro';
// Libs
import { single, repeatable, toMarkdown } from '@Lib/prismiccms';
// Types
import type { IArticle, IPage } from '@Types';

const lang = Astro.currentLocale as 'ru' | 'fi';

const pesponse = await single(pageQuery, 'page_articles', lang);
const articles = await repeatable(repeatableQuery, 'article', lang);

const data = pesponse.data as IPage;
const md = await toMarkdown(data.sub_title);
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <title>{data.seo_title}</title>
  <meta name="description" content={data.seo_description} />
  <link rel="canonical" href=`https://sadko.fi/${lang}/articles` hreflang={lang} />
  <link rel="alternate" href="https://sadko.fi/ru/articles" hreflang="ru" />
  <link rel="alternate" href="https://sadko.fi/fi/articles" hreflang="fi" />
</head>

<Layout>
  <main class="grid separator">
    <div class="page-header">
      <h1 class="header__heading">{data.title}</h1>
      {
        data.sub_title ? (
          <div class="page-header__description markdown font-20">
            <Fragment set:html={md} />
          </div>
        ) : null
      }
    </div>
    {
      articles.length >= 1 ? (
        articles.map(i => {
          const data = i.data as IArticle;
          return <Article article={data} date={i.last_publication_date} />;
        })
      ) : (
        <PageEmpty />
      )
    }
  </main>
</Layout>
