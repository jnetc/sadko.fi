---
import { getCollection, getEntryBySlug } from "astro:content";
// Layouts
import Layout from "@Layouts/Layout.astro";
import SectionHero from "@Components/home-page/section-hero/SectionHero.astro";
// import { SectionHero } from '@Components/home-page/section-hero'
// Export data from Markdown collections
export async function getStaticPaths() {
  const collection = await getCollection("home");

  return collection.map((coll) => {
    return { params: { locale: coll.slug }, props: coll.data };
  });
}
export const prerender = true;
export type Hero = typeof Astro.props;
const props = Astro.props;

const lang = Astro.params.locale;
let collection;
// if (lang === "ru") {
collection = await getEntryBySlug("home", lang);
// } else {
//   collection = await getEntryBySlug("home", lang);
// }

console.log(collection, lang);
---

<Layout>
  <main>
    <SectionHero data={props} />
    <!-- <section class="grid hero">
      <p class="hero__label">{props.hero_label}</p>
      <HeroTitle text={props.hero_title} />
      <p class="hero__desc">
        {props.hero_description}
      </p>
      <div class="hero__action-btns">
        <a href={props.hero_primary_btn_url}>
          {props.hero_primary_btn_name}
        </a>
        <a href={props.hero_secondary_btn_url}
          >{props.hero_secondary_btn_name}
        </a>
      </div>
    </section> -->
  </main>
</Layout>

<style is:global>
  /* .hero {
    padding-block-start: var(--gap-72);
  }

  .hero__label,
  .hero__title,
  .hero__desc,
  .hero__action-btns {
    grid-column: 2 / -2;
    justify-self: center;
  }

  .hero__label,
  .hero__desc {
    color: var(--grey-300);
  }

  .hero__label {
    font-size: var(--font-20);
  }

  .hero__desc {
    max-width: 660px;
    color: var(--grey-300);
    font-size: var(--font-24);
    text-align: center;
    line-height: 1.4;
  } */
</style>
