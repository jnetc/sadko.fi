---
// import * as prismic from "@prismicio/client";
import { getCollection } from "astro:content";
import { CMS } from "@Lib/prismiccms";
// Layouts
import Layout from "@Layouts/Layout.astro";
import SectionHero from "@Components/home-page/section-hero/SectionHero.astro";
import SectionActivities from "@Components/home-page/section-activities/SectionActivities.astro";
import SectionTeachers from "@Components/home-page/section-teachers/SectionTeachers.astro";
import SectionFeedbacks from "@Components/home-page/section-feedbacks/SectionFeedbacks.astro";

// import { SectionHero } from '@Components/home-page/section-hero'
// Export data from Markdown collections
export async function getStaticPaths() {
  const collection = await getCollection("home");

  return collection.map((coll) => {
    return { params: { locale: coll.slug }, props: coll.data };
  });
}
export const prerender = true;
export type Hero = typeof Astro.props;
// const props = Astro.props;

// const lang = Astro.params.locale;
// let collection;
// if (lang === "ru") {
// collection = await getEntryBySlug("home", lang);
// } else {
//   collection = await getEntryBySlug("home", lang);
// }

// import FetchFromDatoCMS from "@Lib/datocms.ts";
// const data = await FetchFromDatoCMS(lang);

// LOCAL DATA!!!
// Remove CACHE folder to get updated data!!!
// import LocaleData from "@Lib/localdata";
// const data = await LocaleData(lang);

const lang = Astro.url.pathname.substring(1, 3) as "ru" | "fi";

// const repositoryName = import.meta.env.PRISMIC_REPOSITORY_NAME;
// const accessToken = import.meta.env.PRISMIC_ACCESS_TOKEN;

// const client = prismic.createClient(repositoryName, {
//   accessToken,
//   // fetchOptions: { cache: "force-cache" },
//   defaultParams: { lang },
// });

// async function init() {
//   const response = await client.getAllByType("clubs", {
//     graphQuery: `{
//       allClubss {
//         edges {
//           node {
//             title
//             address
//             description
//           }
//         }
//       }
//     }`,
//   });

//   return response;
// }

// export const query = gql`
//   query MyQuery {
//     allClubss(lang: "ru") {
//       edges {
//         node {
//           title
//           address
//           description
//         }
//       }
//     }
//   }
// `;
import type { IIndex, SliceType, IBody } from "@Types";
import query from "@Queries/index.ts";

const data = (await CMS(lang, query)) as IIndex;
// const data = await request({ query, variables: { locale: "ru" } });
function getDataForSection(sliceType: SliceType): IBody {
  return data.body.find((section) => section.slice_type === sliceType) as IBody;
}
console.log(data.body[1]);
---

<Layout>
  <main>
    <SectionHero data={getDataForSection("hero")} />
    <SectionActivities />
    <SectionTeachers />
    <SectionFeedbacks />
  </main>
</Layout>

<style is:global>
  /* .hero {
    padding-block-start: var(--gap-72);
  }

  .hero__label,
  .hero__title,
  .hero__desc,
  .hero__action-btns {
    grid-column: 2 / -2;
    justify-self: center;
  }

  .hero__label,
  .hero__desc {
    color: var(--grey-300);
  }

  .hero__label {
    font-size: var(--font-20);
  }

  .hero__desc {
    max-width: 660px;
    color: var(--grey-300);
    font-size: var(--font-24);
    text-align: center;
    line-height: 1.4;
  } */
</style>
