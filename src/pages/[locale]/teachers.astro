---
// Global Styles
import '@Styles/articles_page.css';
// Query
import pageQuery, { repeatableQuery } from '@Queries/page_teachers';
// Layouts
import Layout from '@Layouts/Layout.astro';
import Head from '@Layouts/Head.astro';
import TeacherArticle from '@Components/teacher-articles/TeacherArticle.astro';
// Libs
import { single, repeatable, toMarkdown } from '@Lib/prismiccms';
// Types
import type { ITeacher, IPage } from '@Types';

const lang = Astro.currentLocale as 'ru' | 'fi';

const pageResponse = await single(pageQuery, 'page_teachers', lang);
const teachersResponse = await repeatable(repeatableQuery, 'teacher', lang);

const data = pageResponse.data as IPage;
const teachers = teachersResponse;

const md = await toMarkdown(data.sub_title);
---

<Head title={data.seo_title} description={data.seo_description} href="/teachers/" />

<Layout>
  <main class="grid teachers separator">
    <div class="page-header column-sized">
      <h1 class="header__heading">{data.title}</h1>
      {
        data.sub_title ? (
          <div class="page-header__description markdown font-20">
            <Fragment set:html={md} />
          </div>
        ) : null
      }
    </div>
    {
      teachers.map(i => {
        const data = i.data as ITeacher;
        return (
          <div class="teacher-wrapper grid">
            <TeacherArticle data={data as ITeacher} />

            <svg class={`teacher-wrapper__svg stroke-${data.color}`}>
              <use xlink:href="/svg/ui_shapes.svg#page_stroke_02" />
            </svg>
          </div>
        );
      })
    }
  </main>
</Layout>

<style is:global>
  .teacher-wrapper {
    grid-column: 2 / -2;
  }

  .teacher-wrapper:nth-of-type(even) .teacher-wrapper__svg {
    grid-column: 9 / span 4;
    rotate: z 180deg;
    justify-self: flex-start;
  }

  .teacher-wrapper__svg {
    grid-column: 3 / span 4;
    grid-row: 1;
    max-width: 360px;
    aspect-ratio: 1;
    stroke-width: 20;
    justify-self: flex-end;
    z-index: -1;
  }

  .teacher-wrapper:nth-of-type(odd) .teacher {
    grid-column: 6 / -4;
  }
  .teacher-wrapper:nth-of-type(even) .teacher {
    grid-column: 4 / -6;
  }

  @media (max-width: 1199px) {
    .teacher-wrapper__svg {
      display: none;
    }
    .teacher-wrapper:nth-of-type(odd) .teacher,
    .teacher-wrapper:nth-of-type(even) .teacher {
      grid-column: 1 / -1;
    }
  }
</style>
