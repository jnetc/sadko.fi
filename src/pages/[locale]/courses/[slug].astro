---
export const prerender = true;
// Global Styles
import '@Styles/articles_slug.css';
// Query
import { repeatableQuery } from '@Queries/page_courses';
// Types
import type { IActivity } from '@Types';
// Layouts
import Layout from '@Layouts/Layout.astro';
import Head from '@Layouts/Head.astro';
// Components
import ActivitySlugDescription from '@Components/activity-slugs/ActivitySlugDescription.astro';
import ActivitiSlugDetails from '@Components/activity-slugs/ActivitySlugDetails.astro';
import BackwardButton from '@Components/ui-elements/BackwardButton.astro';
// Libs
import { staticPath, repeatable, toMarkdown } from '@Lib/prismiccms';

const lang = Astro.currentLocale as 'ru' | 'fi';

export async function getStaticPaths() {
  const response = await staticPath(repeatableQuery, 'course');

  return response.flatMap(i => {
    const data = i.data as IActivity;
    return [
      {
        params: { locale: 'ru', slug: data.slug.url },
        props: { slug: data.slug.url },
      },
      {
        params: { locale: 'fi', slug: data.slug.url },
        props: { slug: data.slug.url },
      },
    ];
  });
}

const response = await repeatable(repeatableQuery, 'course', lang);

const { slug } = Astro.props;

const [page] = response.filter(i => {
  const data = i.data as IActivity;

  if (data.slug.url !== slug) return;

  data.publication_date = i.last_publication_date;
  return data;
});

const data = page.data as IActivity;
const md = await toMarkdown(data.text);
---

<Head title={data.title} description={data.description} href=`/courses/${data.slug.url}` />

<Layout>
  <main class="grid page">
    <BackwardButton />
    <img
      class="page__image page__image-details"
      src={data.image.url}
      alt={data.image.alt}
      height={data.image.dimensions.height}
      width={data.image.dimensions.width}
    />
    <ActivitiSlugDetails publish={data.publication_date} data={data} />
    <ActivitySlugDescription md={md} />
  </main>
</Layout>
