---
import * as prismicH from '@prismicio/helpers';

import type { IFeedback } from '@Types';
interface Props {
  data: IFeedback;
  index: number;
}

const lang = Astro.currentLocale as 'ru' | 'fi';

const { data, index } = Astro.props;

const shapeNumber = (index % 12) + 1;
---

<li class="card">
  <a class="card__href" href=`/${lang}/feedbacks/#${data.slug.url}`>
    <svg class=`card__shape fill-${data.color}` aria-hidden="true">
      <use xlink:href=`/svg/ui_shapes.svg#shape${shapeNumber}`></use>
    </svg>
    <h3>{data.name}</h3>
    <p>{prismicH.asText(data.text)}</p>
  </a>
</li>

<style>
  .card {
    scroll-padding-inline-start: var(--gap-32);
    scroll-margin-inline-start: var(--gap-32);
    scroll-snap-align: start;
    scroll-snap-stop: always;
    position: relative;
    background-color: var(--white);
    border-radius: var(--border-corner-32);
    box-shadow:
      0 25px 20px var(--opacity-3),
      0 15px 10px var(--opacity-3);
    transition: all 0.3s ease-in-out;
  }
  .card:hover {
    box-shadow: 0 0 0 0.75rem var(--opacity-10);
  }

  .card__href {
    height: 100%;
    display: grid;
    grid-template-rows: 3.5rem 1fr;
    gap: var(--gap-24);
    padding: var(--gap-128) var(--gap-32) var(--gap-48);
  }

  .card__icon {
    display: grid;
    width: max-content;
    flex-grow: 1;
    align-content: flex-start;
  }

  .card__shape {
    --shape: 175px;
    width: var(--shape);
    aspect-ratio: 1;
    position: absolute;
    top: calc(-1 * var(--shape) / 3);
    right: 0;
    transition: all 0.3s ease-in-out;
  }
  .card:hover .card__shape {
    scale: 1.1;
    translate: 0 1rem;
  }

  h3 {
    width: min-content;
    align-self: flex-end;
    font-size: var(--font-24);
  }

  p {
    min-block-size: var(--size-56);
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 6;
    overflow: hidden;
  }
</style>
