---
import H2Title from '@Components/ui-elements/H2Title.astro';
import H2Description from '@Components/ui-elements/H2Description.astro';
import Answer from './Answer.astro';
import QuestuonMark from './QuestionMark.astro';

import type { HomeBodyFaq } from '@Types';
interface Props {
  data: HomeBodyFaq;
}

const { primary, items } = Astro.props.data;
---

<script>
  const summaries = document.querySelectorAll<HTMLElement>('.faq__summary');

  function selectItem(event: PointerEvent | KeyboardEvent) {
    const list = event.target as HTMLElement;

    // Collapse only target
    if (list.classList.contains('open')) {
      list.classList.remove('open');
      return;
    }

    // Collapse all summaries without target
    summaries.forEach(el => {
      if (el.classList.contains('open')) {
        el.classList.remove('open');
        return;
      }
    });

    list.classList.add('open');

    // Find parent element
    const root = list.closest('.faq__details')!;
    // Scroll to top of parent element
    const timer = setTimeout(() => {
      // CSS: With "scroll-margin-top" we can do gap between top and element
      root.scrollIntoView({
        behavior: 'smooth',
        block: 'start',
      });
      clearTimeout(timer);
    }, 300);
  }

  summaries.forEach(summary => {
    summary.addEventListener('pointerup', selectItem);
  });
</script>

<section class="grid main-section faq">
  <H2Title>{primary.heading}</H2Title>
  <H2Description>{primary.text}</H2Description>
  <ul class="faq__container">
    {
      items.map(i => {
        if ('question' in i) {
          return <Answer heading={i.question} markdown={i.answer} />;
        }
        return null;
      })
    }
    <QuestuonMark extraClass="violet" />
    <QuestuonMark extraClass="yellow" />
    <QuestuonMark extraClass="green" />
  </ul>
  <img class="faq__image" src="/webp/father_and_boy.webp" alt="mother with a child" />
  <svg class="faq__svg">
    <use xlink:href="/svg/ui_shapes.svg#page_stroke_02"></use>
  </svg>
</section>

<style>
  .faq__svg,
  .faq__image {
    place-self: center;
    margin-top: var(--gap-192);
  }

  .faq__svg {
    grid-column: 9 / span 5;
    max-height: 366px;
    aspect-ratio: 1 / 1.5;
    stroke: var(--violet);
    stroke-width: 30;
  }
  .faq__image {
    grid-column: 2 / span 7;
  }

  .faq__container {
    grid-column: 2 / -2;
    display: grid;
    grid-template-columns: 150px minmax(320px, 1fr) 150px;
    row-gap: var(--gap-32);
    position: relative;
  }

  @media (max-width: 1199px) {
    .faq__container {
      grid-template-columns: auto minmax(280px, 1fr) auto;
    }
  }
  @media (max-width: 959px) {
    .faq__svg {
      grid-column: 1 / -1;
      margin-top: var(--gap-96);
    }
    .faq__image {
      display: none;
    }
  }
</style>
