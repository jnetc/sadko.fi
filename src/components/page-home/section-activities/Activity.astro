---
import type { TypeUIIcons, SlugType, HeadingTextType } from '@Types';

interface Props extends SlugType, HeadingTextType {
  icon: TypeUIIcons;
  index: number;
}

const lang = Astro.currentLocale as 'ru' | 'fi';
const { heading, text, icon, index, slug } = Astro.props;
---

<li class="card">
  <a class="card__href" href=`/${lang}/${slug.url}`>
    <div class="card__icon" aria-hidden="true">
      <svg class="icon">
        <use xlink:href=`/svg/ui_icons.svg#${icon}`></use>
      </svg>
      <svg class="cookie">
        <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
      </svg>
    </div>
    <svg class="card__shape" aria-hidden="true">
      <use xlink:href=`/svg/shapes.svg#shape${index + 1}`></use>
    </svg>
    <h3>{heading}</h3>
    <p class="card__text">{text}</p>
  </a>
</li>

<style>
  .card {
    scroll-padding-inline-start: var(--gap-32);
    scroll-margin-inline-start: var(--gap-32);
    scroll-snap-align: start;
    scroll-snap-stop: always;
    block-size: 364px;
    /* margin-right: var(--gap-32); */
    position: relative;
    border-radius: var(--border-corner-32);
    overflow: hidden;
    /* cursor: grab; */
    transition: all 0.3s ease-in-out;
  }
  .card:hover {
    box-shadow: 0 0 0 0.75rem var(--opacity-10);
  }
  .card__href {
    height: 100%;
    display: grid;
    gap: var(--gap-16);
    /* flex-direction: column; */
    padding: var(--gap-24) var(--gap-24) var(--gap-48);
  }
  .card:nth-of-type(5n - 4) {
    background-color: var(--violet-light);
  }
  .card:nth-of-type(5n - 3) {
    background-color: var(--green);
  }
  .card:nth-of-type(5n - 2) {
    background-color: var(--pink);
  }
  .card:nth-of-type(5n - 1) {
    background-color: var(--violet);
  }
  .card:nth-of-type(5n) {
    background-color: var(--black);
  }

  .card__icon {
    display: grid;
    width: max-content;
    flex-grow: 1;
    align-content: flex-start;
  }

  .card__shape {
    --shape: 218px;
    width: var(--shape);
    aspect-ratio: 1;
    position: absolute;
    top: calc(-1 * var(--shape) / 4);
    right: calc(-1 * var(--shape) / 4);
    transition: all 0.3s ease-in-out;
  }

  .card:hover .card__shape {
    scale: 1.3;
  }

  .card:nth-of-type(5n - 4) .card__shape {
    fill: var(--violet);
  }
  .card:nth-of-type(5n - 3) .card__shape {
    fill: var(--violet);
  }
  .card:nth-of-type(5n - 2) .card__shape {
    fill: var(--black);
  }
  .card:nth-of-type(5n - 1) .card__shape {
    fill: var(--green);
  }
  .card:nth-of-type(5n) .card__shape {
    fill: var(--violet-light);
  }

  .icon,
  .cookie {
    grid-column: 1;
    grid-row: 1;
    aspect-ratio: 1;
    justify-self: center;
    align-self: center;
  }

  .icon {
    width: var(--size-48);
    fill: var(--black);
  }
  .card:nth-of-type(5n - 1) .icon,
  .card:nth-of-type(5n) .icon {
    fill: var(--white);
  }

  .cookie {
    width: var(--size-96);
    stroke: var(--black);
  }
  .card:nth-of-type(5n - 1) .cookie,
  .card:nth-of-type(5n) .cookie {
    stroke: var(--white);
  }

  h3,
  p {
    color: var(--black);
  }

  .card:nth-of-type(5n - 1) :is(h3, p),
  .card:nth-of-type(5n) :is(h3, p) {
    color: var(--white);
  }

  h3 {
    align-self: flex-end;
    font-size: var(--font-24);
  }

  p {
    min-block-size: var(--size-56);
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
  }
</style>
