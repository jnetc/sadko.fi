---
import type { ISubMenu } from "@Types";

interface Props {
  link: ISubMenu;
}
// Get language from Astro Runtime API
const lang = Astro.url.pathname.substring(1, 3) as "ru" | "fi";

const par = Astro.url;

const { icon, hrefDesc, hrefName, iconBorder, slug } = Astro.props.link;
console.log(`${par.hostname}/${lang}/${slug}`);
---

<a
  href=`/${lang}/${slug}`
  class="subnav__link"
  data-astro-reload
  role="menuitem"
>
  <div>
    <svg class="icon">
      <use xlink:href=`/svg/ui_icons.svg#${icon}`></use>
    </svg>
    <svg class=`${iconBorder}`>
      <use xlink:href=`/svg/ui_icons.svg#${iconBorder}`></use>
    </svg>
  </div>
  <h4>{hrefName}</h4>
  <p>{hrefDesc}</p>
</a>

<style>
  .subnav__link {
    display: grid;
    max-width: 300px;
    grid-template-columns: var(--size-48) 1fr;
    grid-template-rows: 2fr;
    align-items: flex-start;
    justify-content: flex-start;
    column-gap: var(--gap-12);
    row-gap: var(--gap-8);
    padding: var(--gap-12);
    border-radius: var(--border-corner-12);
    border: 1.5px solid transparent;
    transition: all 0.3s ease-in-out;

    &:hover,
    &:focus-visible {
      background-color: var(--opacity-8);
    }

    div {
      grid-column: 1;
      grid-row: 1 / 2 span;
      display: grid;
    }

    h4,
    p {
      grid-column: 2;
    }
    h4 {
      grid-row: 1;
      font-size: var(--font-16);
    }
    p {
      grid-row: 2;
      color: var(--grey-200);
      font-size: var(--font-14);
      line-height: 1.4;
    }

    .icon,
    .cookie,
    .list {
      grid-column: 1;
      grid-row: 1 / 2 span;
      aspect-ratio: 1;
      justify-self: center;
      align-self: center;
    }
    .icon {
      width: var(--size-24);
    }
    .cookie {
      width: var(--size-48);
    }

    div:has(.list) .icon {
      justify-self: flex-end;
      align-self: flex-end;
    }
  }
</style>
