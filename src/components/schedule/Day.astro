---
import type { DayType } from '@Types';
interface Props {
  day: Array<DayType>;
  name: string;
}

const { day, name } = Astro.props;
---

<section class="schedule__day">
  <h3 class="schedule-day__name">{name}</h3>
  <div class="schedule__day-table">
    {
      day.map(i => (
        <ul class="schedule-day__row">
          <li class="schedule-day__cell">
            {i.name}
            {i.info ? <em>{`*${i.info}`}</em> : null}
          </li>
          <li class="schedule-day__cell">{i.time}</li>
          <li class="schedule-day__cell">{i.age}</li>
          {i.price ? <li class="schedule-day__cell">{i.price}</li> : null}
          {i.label ? <li class="schedule-day__cell label-cell">{`*${i.label}`}</li> : null}
        </ul>
      ))
    }
  </div>
</section>

<style>
  .schedule__day {
    display: flex;
    flex-wrap: wrap;
  }

  .schedule-day__name {
    font-size: clamp(var(--font-24), 3vw, var(--font-32));
    padding-inline: var(--gap-32);
    padding-block: var(--gap-16);
    position: relative;
    border-radius: var(--border-corner-16) var(--border-corner-16) 0 0;
    isolation: isolate;
  }
  .schedule-day__name::after {
    content: '';
    position: absolute;
    inset-inline: 0;
    inset-block: 0;
    background-image: linear-gradient(to bottom, transparent 85%, var(--black));
    mix-blend-mode: overlay;
    pointer-events: none;
  }

  .schedule__day:nth-of-type(7n - 6) h3 {
    background-color: var(--yellow);
  }
  .schedule__day:nth-of-type(7n - 5) h3 {
    background-color: var(--pink);
  }
  .schedule__day:nth-of-type(3) h3 {
    background-color: var(--green);
  }
  .schedule__day:nth-of-type(4) h3 {
    background-color: var(--violet-light);
  }
  .schedule__day:nth-of-type(5) h3 {
    background-color: var(--violet);
    color: var(--white);
  }

  .schedule__day-table {
    flex-basis: 100%;
    display: flex;
    flex-direction: column;
    background-color: var(--white);
    border-radius: 0 var(--border-corner-16) var(--border-corner-16) var(--border-corner-16);
    box-shadow:
      0 25px 20px var(--opacity-5),
      0 15px 10px var(--opacity-8);
  }

  .schedule-day__row {
    display: grid;
    grid-template-columns: 1fr 15ch 20ch 20ch;
    gap: var(--gap-12);
    padding-inline: var(--gap-32);
    padding-block: var(--gap-18);
    font-size: clamp(var(--font-16), 3vw, var(--font-18));
  }

  .schedule-day__row:not(:last-child) {
    border-bottom: 1px solid var(--violet-light);
  }

  .schedule-day__cell:first-child {
    font-weight: bold;
    font-size: clamp(var(--font-18), 2vw, var(--font-20));
  }

  .schedule-day__row:nth-child(even) {
    background-color: var(--opacity-3);
  }

  .label-cell,
  .schedule-day__cell em {
    font-weight: bold;
  }

  .label-cell {
    color: var(--violet);
  }

  .schedule-day__cell em {
    font-size: var(--font-16);
    color: var(--error);
  }

  @media (max-width: 959px) {
    .schedule-day__row {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 559px) {
    .schedule__day {
      display: initial;
    }
  }
</style>
