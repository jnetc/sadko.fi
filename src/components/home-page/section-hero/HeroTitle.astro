---
interface Props {
  text: string;
}

const props = Astro.props.text;
const title = props.split(',');
---

<h1 class="hero__title">
  <span class="title__lx">{title[0]}</span>
  <span class="title__mx">{title[1]}</span>
  <span class="title__sx">
    {title[2]}
    <span class="title__ss">
      {title[3]}
      <span class="sx__wrapper">
        <span class="sx__word">{title[4]}</span>
      </span>
    </span>
  </span>
  <svg class="title__stroke" fill="none" viewBox="0 0 334 473">
    <path
      d="M204.074 431C293.779 390.26 316.431 314.576 301.617 326.116C281.586 341.718 214.526 385.926 153.562 390.26C153.562 390.26 288.553 280.175 301.617 257.638C226.903 268.039 37.9144 421.465 27.2789 405.862C-21.3077 385.059 360.838 156.221 316.422 165.755C272.006 175.29 109.145 289.71 109.145 289.71L220.621 157.954L45.5676 278.441C45.5676 278.441 223.419 61.738 99.7493 34"
      stroke-linecap="round"
      stroke-linejoin="round"></path>
  </svg>
</h1>

<style is:global>
  .hero__title {
    grid-row: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-block: var(--gap-48) clamp(var(--gap-96), 10vw, var(--gap-152));
    position: relative;
    font-weight: bold;
    line-height: 1;
  }

  .title__lx {
    font-size: clamp(var(--font-48), 7vw, var(--font-96));
  }

  .title__mx {
    font-size: clamp(var(--font-40), 6.55vw, var(--font-88));
  }

  .title__sx {
    display: flex;
    gap: var(--gap-18);
    font-size: clamp(var(--font-36), 6.25vw, var(--font-80));
  }

  .title__ss {
    position: relative;
  }

  .sx__wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    inset-inline: -240%;
    background-color: var(--yellow);
    border-radius: 50px;
    color: var(--violet);
    translate: 15px -10px;
    translate: clamp(5px, 0.75vw, 15px) calc(-1 * clamp(6px, 0.75vw, 10px));
    rotate: z -15deg;
    transform-origin: top center;
    animation: swing 5s ease-in-out infinite;
    z-index: -1;
  }
  .sx__wrapper::after {
    content: '';
    position: absolute;
    width: clamp(var(--size-24), 3.75vw, var(--size-48));
    aspect-ratio: 1;
    background-color: var(--background);
    border-radius: 50%;
    border: clamp(2px, 0.5vw, 6px) solid var(--black);
    top: calc(-1 * (clamp(var(--size-24), 3.75vw, var(--size-48)) / 2));
  }
  .sx__word {
    font-size: clamp(var(--font-24), 3.75vw, var(--font-48));
    padding: var(--gap-16) var(--gap-48);
  }

  .title__stroke {
    width: 270px;
    aspect-ratio: 1 / 1;
    position: absolute;
    top: 0;
    left: 0;
    stroke: var(--pink);
    stroke-width: 35;
    rotate: z 90deg;
    translate: -9rem -3rem;
    stroke-dashoffset: 2540;
    stroke-dasharray: 2540;
    animation: stroke 1.5s ease-in-out forwards;
    animation-delay: 0.5s;
    z-index: -1;
  }

  @keyframes stroke {
    100% {
      stroke-dashoffset: 0;
    }
  }

  @keyframes swing {
    50% {
      rotate: z 10deg;
    }
  }

  @media (max-width: 767px) {
    .title__stroke {
      width: 220px;
      translate: -8rem -2rem;
    }
  }
  @media (max-width: 559px) {
    .title__stroke {
      width: 150px;
      translate: -5rem -1rem;
    }
  }
</style>
