---
// import CircleButton from "@Components/ui-elements/CircleButton.astro";
import H2Title from "@Components/ui-elements/H2Title.astro";
import H2Description from "@Components/ui-elements/H2Description.astro";
import Carousel from "@Components/ui-elements/Carousel.astro";

// Get language from Astro Runtime API
// const lang = Astro.url.pathname.substring(1, 3) as "ru" | "fi";
---

<section class="grid activities">
  <H2Title>Наши активности</H2Title>
  <H2Description>Что у нас есть и что мы предлагаем</H2Description>
  <Carousel>
    <li class="card">
      <div class="card__icon" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape" aria-hidden="true">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
    <li class="card">
      <div class="card__icon" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
    <li class="card">
      <div class="card__icon" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
    <li class="card">
      <div class="card__icon revers" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>
        Добро пожаловать на мастер класс к нам в кружок. Добро пожаловать на
        мастер класс к нам в кружок. Добро пожаловать на мастер класс к нам в
        кружок.
      </p>
    </li>
    <li class="card">
      <div class="card__icon revers" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
    <li class="card">
      <div class="card__icon" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
    <li class="card">
      <div class="card__icon" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
    <li class="card">
      <div class="card__icon" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
    <li class="card">
      <div class="card__icon" aria-hidden="true">
        <svg class="icon">
          <use xlink:href=`/svg/ui_icons.svg#masters`></use>
        </svg>
        <svg class="cookie">
          <use xlink:href=`/svg/ui_icons.svg#cookie`></use>
        </svg>
      </div>
      <svg class="card__shape">
        <use xlink:href=`/svg/shapes.svg#shape11`></use>
      </svg>
      <h3>Мастер класс</h3>
      <p>Добро пожаловать на мастер класс к нам в кружок</p>
    </li>
  </Carousel>
</section>
<!-- <div class="carousel">
  <CircleButton icon="arrow" dataValue="prev" extraClass="hide" />
  <div class="scroll-area">
    <ul class="cards">

    </ul>
  </div>
  <CircleButton icon="arrow" dataValue="next" />
</div> -->

<!-- <script>
  const prevButton =
    document.querySelector<HTMLButtonElement>('[data-dir="prev"]')!;
  const nextButton =
    document.querySelector<HTMLButtonElement>('[data-dir="next"]')!;
  const cards = document.querySelector<HTMLUListElement>(".cards")!;

  const maxScrollWidth = cards.scrollWidth - cards.clientWidth;

  function moveCarousel(event: MouseEvent) {
    const el = event.target as HTMLButtonElement;
    // Creating a direction when a button was clicked
    const direction = el.dataset.dir === "prev" ? -1 : 1;
    // Move all cards array in current direction
    cards.scrollBy({ left: direction, behavior: "smooth" });
  }

  function showControlButton(event: Event) {
    const el = event.target as HTMLElement;

    el.scrollLeft > 0
      ? prevButton.classList.remove("hide")
      : prevButton.classList.add("hide");

    Math.round(el.scrollLeft) >= maxScrollWidth
      ? nextButton.classList.add("hide")
      : nextButton.classList.remove("hide");
  }

  cards.addEventListener("scroll", showControlButton);
  prevButton.addEventListener("pointerdown", moveCarousel);
  nextButton.addEventListener("pointerdown", moveCarousel);
</script> -->

<style>
  /* .carousel-scrollbar {
    height: var(--size-24);
    width: 100%;
    display: flex;
    align-items: center;
  }

  .scrollbar-track {
    height: var(--size-4);
    width: 100%;
    position: relative;
    background-color: var(--white);
    border-radius: 100vw;
  }
  .carousel-scrollbar:hover .scrollbar-track {
    height: var(--size-8);
  }
  .scrollbar-thumb {
    height: var(--size-4);
    width: 50%;
    position: absolute;
    background-color: var(--violet);
    border-radius: 100vw;
    cursor: grab;
  }
  .carousel-scrollbar:hover .scrollbar-thumb {
    height: 100%;
  }
  .carousel-scrollbar .scrollbar-thumb:active {
    height: calc(100% + var(--size-4));
    top: calc(-1 * var(--size-4) / 2);
    cursor: grabbing;
  }

  .scrollbar-thumb::after {
    content: "";
    position: absolute;
    inset: 10px;
    scale: 1 1.5;
  } */

  .carousel {
    max-width: 1504px;
    width: 100%;
    position: relative;

    /* padding-inline: var(--gap-32); */
  }

  .scroll-area {
    display: grid;
    row-gap: var(--gap-16);
    position: relative;
    overflow-x: hidden;
    scroll-behavior: smooth;
  }

  .cards {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: calc(100% / 4 - var(--gap-24));
    column-gap: var(--gap-32);
    padding-inline: var(--gap-32);
    padding-block-end: var(--gap-32);
    overflow-x: scroll;
    scrollbar-width: auto;
    scrollbar-color: var(--violet) var(--white);
    scroll-snap-type: x mandatory;
  }
  .cards::-webkit-scrollbar {
    width: var(--size-12);
  }
  .cards::-webkit-scrollbar-track {
    background-color: var(--white);
  }
  .cards::-webkit-scrollbar-thumb {
    background-color: var(--violet);
    border-radius: 100vw;
    border: 3px solid var(--white);
  }

  @media screen and (max-width: 1199px) {
    .cards {
      grid-auto-columns: calc(320px - var(--gap-24));
    }
  }

  .card {
    scroll-padding-inline-start: var(--gap-32);
    scroll-margin-inline-start: var(--gap-32);
    scroll-snap-align: start;
    scroll-snap-stop: always;
    block-size: 364px;
    display: flex;
    flex-direction: column;
    /* margin-right: var(--gap-32); */
    padding: var(--gap-24) var(--gap-24) var(--gap-48);
    position: relative;
    border-radius: var(--border-corner-32);
    gap: var(--gap-16);
    overflow: hidden;
    /* cursor: grab; */
  }
  .card:nth-of-type(5n - 4) {
    background-color: var(--violet-light);
  }
  .card:nth-of-type(5n - 3) {
    background-color: var(--green);
  }
  .card:nth-of-type(5n - 2) {
    background-color: var(--pink);
  }
  .card:nth-of-type(5n - 1) {
    background-color: var(--violet);
  }
  .card:nth-of-type(5n) {
    background-color: var(--black);
  }

  .card__icon {
    display: grid;
    width: max-content;
    flex-grow: 1;
    align-content: flex-start;
  }
  .card__shape {
    --shape: 218px;
    width: var(--shape);
    aspect-ratio: 1;
    position: absolute;
    top: calc(-1 * var(--shape) / 4);
    right: calc(-1 * var(--shape) / 4);
  }

  .card:nth-of-type(5n - 4) .card__shape {
    fill: var(--violet);
  }
  .card:nth-of-type(5n - 3) .card__shape {
    fill: var(--violet);
  }
  .card:nth-of-type(5n - 2) .card__shape {
    fill: var(--black);
  }
  .card:nth-of-type(5n - 1) .card__shape {
    fill: var(--green);
  }
  .card:nth-of-type(5n) .card__shape {
    fill: var(--violet-light);
  }

  .icon,
  .cookie {
    grid-column: 1;
    grid-row: 1;
    aspect-ratio: 1;
    justify-self: center;
    align-self: center;
  }

  .icon {
    width: var(--size-48);
    fill: var(--black);
  }
  .card:nth-of-type(5n - 1) .icon,
  .card:nth-of-type(5n) .icon {
    fill: var(--white);
  }

  .cookie {
    width: var(--size-96);
    stroke: var(--black);
  }
  .card:nth-of-type(5n - 1) .cookie,
  .card:nth-of-type(5n) .cookie {
    stroke: var(--white);
  }

  h3,
  p {
    color: var(--black);
  }
  .card:nth-of-type(5n - 1) :is(h3, p),
  .card:nth-of-type(5n) :is(h3, p) {
    color: var(--white);
  }

  h3 {
    font-size: var(--font-32);
  }
  p {
    min-block-size: var(--size-56);
    font-size: var(--font-16);
    font-weight: bold;
    line-height: 1.2;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
  }
</style>
