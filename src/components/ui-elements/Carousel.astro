---
import CircleButton from "./CircleButton.astro";
---

<div class="carousel">
  <CircleButton icon="arrow" dataValue="prev" extraClass="hide" />
  <div class="scroll-area">
    <ul class="cards">
      <slot />
    </ul>
  </div>
  <CircleButton icon="arrow" dataValue="next" />
</div>

<script>
  const prevButton =
    document.querySelector<HTMLButtonElement>('[data-dir="prev"]')!;
  const nextButton =
    document.querySelector<HTMLButtonElement>('[data-dir="next"]')!;
  const cards = document.querySelector<HTMLUListElement>(".cards")!;

  const maxScrollWidth = cards.scrollWidth - cards.clientWidth;

  function moveCarousel(event: MouseEvent) {
    const el = event.target as HTMLButtonElement;
    // Creating a direction when a button was clicked
    const direction = el.dataset.dir === "prev" ? -1 : 1;
    // Move all cards array in current direction
    cards.scrollBy({ left: direction, behavior: "smooth" });
  }

  function showControlButton(event: Event) {
    const el = event.target as HTMLElement;

    el.scrollLeft > 0
      ? prevButton.classList.remove("hide")
      : prevButton.classList.add("hide");

    Math.round(el.scrollLeft) >= maxScrollWidth
      ? nextButton.classList.add("hide")
      : nextButton.classList.remove("hide");
  }

  cards.addEventListener("scroll", showControlButton);
  prevButton.addEventListener("pointerdown", moveCarousel);
  nextButton.addEventListener("pointerdown", moveCarousel);
</script>

<style>
  .carousel {
    grid-column: 1 / -1;
    max-width: 1504px;
    width: 100%;
    position: relative;
  }

  .scroll-area {
    display: grid;
    row-gap: var(--gap-16);
    position: relative;
    overflow-x: hidden;
    scroll-behavior: smooth;
  }

  .cards {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: calc(100% / 4 - var(--gap-24));
    column-gap: var(--gap-32);
    padding-inline: var(--gap-32);
    padding-block-end: var(--gap-32);
    overflow-x: scroll;
    scrollbar-width: auto;
    scrollbar-color: var(--violet) var(--white);
    scroll-snap-type: x mandatory;
  }
  .cards::-webkit-scrollbar {
    width: var(--size-12);
  }
  .cards::-webkit-scrollbar-track {
    background-color: var(--white);
  }
  .cards::-webkit-scrollbar-thumb {
    background-color: var(--violet);
    border-radius: 100vw;
    border: 3px solid var(--white);
  }

  @media screen and (max-width: 1199px) {
    .cards {
      grid-auto-columns: calc(320px - var(--gap-24));
    }
  }
</style>
