---
import ArticleContent from './ArticleContent.astro';
// Types
import type { IArticle, IActivity } from '@Types';

const path = Astro.url.pathname.split('/')[2];

interface Props {
  article: IArticle | IActivity;
  date: string;
}

const { article, date } = Astro.props;
---

<section class="section__item">
  <a class="section__href" href={`${path}/${article.slug.url}`} aria-label={`${path}/${article.slug.url}`}>
    <article class="section__article arrow-icon">
      <img
        class="section__image"
        src={article.image.url}
        alt={article.image.alt}
        height={article.image.dimensions.height}
        width={article.image.dimensions.width}
      />
      <ArticleContent content={article} publish={date} />
    </article>
  </a>
  <svg class="section__svg">
    <use xlink:href="/svg/shapes.svg#page_stroke_02"></use>
  </svg>
</section>

<style>
  .section__item {
    grid-column: 2 / -2;
    display: grid;
    grid-template-columns: repeat(12, minmax(0, 6rem));
    column-gap: var(--gap-32);
  }
  .section__href {
    grid-column: 1 / -5;
  }
  .section__item:nth-of-type(even) .section__href {
    grid-column: 5 / -1;
  }
  .section__item:nth-of-type(even) .section__svg {
    grid-column: 1 / span 4;
  }
  .section__item:nth-of-type(even) .section__article {
    direction: rtl;
    border-left: 1.5px solid transparent;
  }
  .section__item:nth-of-type(odd) .section__article {
    border-right: 1.5px solid transparent;
  }

  .section__item:nth-of-type(4n - 1) .section__svg {
    stroke: var(--violet);
  }
  .section__item:nth-of-type(4n - 3) .section__svg {
    stroke: var(--green);
  }
  .section__item:nth-of-type(4n) .section__svg {
    stroke: var(--yellow);
  }
  .section__item:nth-of-type(4n - 2) .section__svg {
    stroke: var(--pink);
  }

  .section__svg {
    grid-column: 10 / span 4;
    grid-row: 1;
    max-width: 280px;
    aspect-ratio: 1;
    stroke-width: 30;
    place-self: center;
  }

  .section__article {
    display: grid;
    grid-template-columns: minmax(280px, 40%) 1fr;
    border-radius: var(--border-corner-32);
    box-shadow:
      0 25px 20px var(--opacity-3),
      0 15px 10px var(--opacity-3);
    transition: all 0.3s ease-in-out;
  }
  .section__item .section__article:hover {
    border-color: var(--violet);
  }

  .section__image {
    max-height: 250px;
    min-height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: var(--border-corner-32);
  }

  /* MEDIA QUERIES */
  @media (max-width: 1199px) {
    .section__item {
      grid-template-columns: 1fr;
      column-gap: 0;
    }

    .section__href {
      grid-column: 1 / -1;
    }

    .section__svg {
      display: none;
    }
  }

  @media screen and (max-width: 767px) {
    .section__article {
      grid-template-columns: 1fr;
      grid-template-rows: 220px min-content;
      gap: 0;
    }

    .section__item:nth-of-type(even) .section__article,
    .section__item:nth-of-type(odd) .section__article {
      border-right: 0px solid transparent;
      border-left: 0px solid transparent;
    }

    .section__item .section__article {
      border-bottom: 1.5px solid transparent;
    }

    .section__image {
      max-height: 100%;
      border-top-left-radius: var(--border-corner-32);
      border-top-left-radius: var(--border-corner-32);
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
</style>
